<?php

namespace App\FrontModule;

use Model;
use Nette;

/**
 * Class StatusPresenter
 * @package App\FrontModule
 */
class StatusPresenter extends BasePresenter {

	/** @var \Model\Repository\CompanyRepository @inject */
	public $companyRepository;

	/** @var \Model\Repository\UserRepository @inject */
	public $userRepository;

	/** @var \Model\Repository\StatusRepository @inject */
	public $statusRepository;

	/** @persistent */
	public $company_id;

	public function renderDefault($company = NULL) {
		$this->company_id = $company;
		$tmp = array('company' => $this->company_id);

		$this['companiesForm']->setDefaults($tmp); //z neznamyho duvodu to musim delat pres promennou, jinak to nefunguje		
	}

	public function createComponentCompaniesForm() {
		$form = new Nette\Application\UI\Form;

		//TODO predelat na prihlasenyho uzivatele
		$user = $this->userRepository->find(1);

		//schovame si to pro vyber 1. spolecnosti
		//$this->company_id = -1;

		foreach ($user->companies as $company) {
			$companyNames[$company->id] = $company->name;
			if ($this->company_id = null)
				$this->company_id = $company->id;  //nastavim vyber selectBoxu na 1. spolecnost
		}

		$select = $form->addSelect('company', 'Společnost', $companyNames)
				->setPrompt("Vyberte společnost");

		$form->addSubmit('change', 'changeButton')->setAttribute('class', 'ajax hide');

		$form->onSuccess[] = $this->companiesFormSucceeded;

		return $form;
	}

	public function companiesFormSucceeded($form) {
		$this->company_id = $form->values->company;
		$this->template->company_id = $form->values->company;

		$this['statusDatagrid']->invalidateControl();
	}

	/**
	 * @return \Nextras\Datagrid\Datagrid
	 */
	public function createComponentStatusDatagrid() {
		$grid = new \Nextras\Datagrid\Datagrid;
		$grid->addColumn('id_spool', 'Číslo spoolu')->enableSort();
		$grid->addColumn('docType', 'Typ dokladu')->enableSort();
		$grid->addColumn('dateIn', 'Datum přijetí')->enableSort();
//		$grid->addColumn('statusType', 'Status zpracování')->enableSort();
//		$grid->addColumn('dateOut', 'Datum vypravení/odeslání')->enableSort();
//		$grid->addColumn('totalAmountEnvelop', 'Počet zásilek');


		$grid->setRowPrimaryKey('id');

		$grid->setDataSourceCallback($this->getDataSource);
		//$grid->setPagination($this->settings['dataSourceLimit'], $this->getDataSourceSum);

		$grid->setFilterFormFactory(function () {
			$form = new Nette\Forms\Container;
			//$form->addText('id_spool'); //->setAttribute('class', 'col-xs-2');
			//	$form->addText('dateIn');

			return $form;
		});

		//$grid->addCellsTemplate(__DIR__ . '/../../templates/defaultDatagrid.latte');
		$grid->addCellsTemplate(__DIR__ . '/../../templates/@bootstrap3.datagrid.latte');
		//$grid->addCellsTemplate(__DIR__ . '/../../templates/@bootstrap3.extended-pagination.datagrid.latte');
		$grid->addCellsTemplate(__DIR__ . '/../templates/Status/statusDatagrid.latte');

		return $grid;
	}

	/**
	 * @param $filter
	 * @param $order
	 * @param $paginator = null
	 * @return 
	 */
	public function prepareDataSource($filter, $order, $paginator = NULL) {
		$storedParams = null;
		$where=array();

		if (count($filter) > 0)
			$where = $this->processFilter($filter); //zpracujeme podminku WHERE

		if ($paginator) {
			$storedParams = array('pageSize' => $paginator->getItemsPerPage(), 'offset' => $paginator->getOffset());
		}

		if (count($where) > 0)
			$storedParams['where'] = $where;

		if ($order) {
			$storedParams['orderBy'] = $this->getColumName($order[0]);
			$storedParams['ascOrDesc'] = $order[1];
		}
		//$storedParams = $this->prepareParams($filter, $order, $paginator);
		try {
dump($this->getCompanyId());
			$selection = $this->statusRepository->findByCompany($this->getCompanyId(), $storedParams);

			return $selection;
		} catch (\Exception $exc) {
			//echo $exc->getTraceAsSring();
			$this->flashMessage('Odchycena vyjimka'); //stejne to nefunguje, Ajax to utlumi
		}
	}

	private function getCompanyId() {
		$companyId = $this['companiesForm']['company']->getValue();
		if ($companyId)
			return $companyId;
		else
			return $this->getParameter('company') ? $this->getParameter('company') : null;
	}

}
